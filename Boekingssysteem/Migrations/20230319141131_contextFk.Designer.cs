// <auto-generated />
using System;
using Boekingssysteem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Boekingssysteem.Migrations
{
    [DbContext(typeof(BoekingssysteemContext))]
    [Migration("20230319141131_contextFk")]
    partial class contextFk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("BS")
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Boekingssysteem.Models.Afwezigheid", b =>
                {
                    b.Property<int>("AfwezigheidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Begindatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opmerking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AfwezigheidId");

                    b.HasIndex("Rnummer");

                    b.ToTable("Afwezigheid");
                });

            modelBuilder.Entity("Boekingssysteem.Models.DocentRichting", b =>
                {
                    b.Property<int>("DocentRichtingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RichtingId")
                        .HasColumnType("int");

                    b.Property<string>("Rnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DocentRichtingId");

                    b.HasIndex("RichtingId");

                    b.HasIndex("Rnummer");

                    b.ToTable("DocentRichting");
                });

            modelBuilder.Entity("Boekingssysteem.Models.Gebruiker", b =>
                {
                    b.Property<string>("Rnummer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rnummer");

                    b.HasIndex("RolId");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("Boekingssysteem.Models.Richting", b =>
                {
                    b.Property<int>("RichtingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RichtingId");

                    b.ToTable("Richting");
                });

            modelBuilder.Entity("Boekingssysteem.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Boekingssysteem.Models.Afwezigheid", b =>
                {
                    b.HasOne("Boekingssysteem.Models.Gebruiker", "Gebruiker")
                        .WithMany("Afwezigheden")
                        .HasForeignKey("Rnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Boekingssysteem.Models.DocentRichting", b =>
                {
                    b.HasOne("Boekingssysteem.Models.Richting", "Richting")
                        .WithMany("DocentRichtingen")
                        .HasForeignKey("RichtingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boekingssysteem.Models.Gebruiker", "Gebruiker")
                        .WithMany("DocentRichtingen")
                        .HasForeignKey("Rnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Boekingssysteem.Models.Gebruiker", b =>
                {
                    b.HasOne("Boekingssysteem.Models.Rol", "Rol")
                        .WithMany("Gebruikers")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
